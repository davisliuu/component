#
# isp ko Makefile
#

ifeq ($(PARAM_FILE), )
	PARAM_FILE:=../../../../Makefile.param
	include $(PARAM_FILE)
endif

ifeq ($(MPP_BUILD), y)
EXT_PATH := $(SDK_PATH)/$(EXTDRV)
else
EXT_PATH := $(SDK_PATH)/drv/extdrv/$(OSTYPE)
endif

ISP_KO := ../../ko
ISP_OBJ  := ../../obj

EXTRA_CFLAGS += $(MPP_CFLAGS)
EXTRA_CFLAGS += -I$(REL_INC) -I$(SDK_PATH)/mpp_big-little/code/mkp/include
EXTRA_CFLAGS += -I$(REL_INC) -I$(SDK_PATH)/mpp_big-little/code/arch/$(ARCH_DIR)/include
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp_big-little/code/mkp_inc
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp_big-little/component/isp/firmware/vreg
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp_big-little/component/isp/firmware/vreg/arch/$(ARCH_DIR)
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp_big-little/component/isp/include
EXTRA_CFLAGS += -I$(EXT_PATH)/i2c
EXTRA_CFLAGS += -I$(EXT_PATH)/hi_i2c
EXTRA_CFLAGS += -I$(EXT_PATH)/ssp-sony
EXTRA_CFLAGS += -I$(SDK_PATH)/osal/include
EXTRA_CFLAGS += -I$(OSAL_ROOT)/include

ifeq ($(CONFIG_GPIO_I2C), y)
    INC += -I$(EXT_PATH)/gpio-i2c-ex
    INC += -I$(EXT_PATH)/gpio-i2c
else
    INC += -I$(EXT_PATH)/i2c
    INC += -I$(EXT_PATH)/hi_i2c
endif

EXTRA_CFLAGS += $(INC)
ifeq ($(HIGDB),HI_GDB)
EXTRA_CFLAGS += -g
endif
ifeq ($(CONFIG_JPEGEDCF), y)
     EXTRA_CFLAGS += -D ENABLE_JPEGEDCF 
endif
ifeq ($(CONFIG_GPIO_I2C),y)
HI_GPIO_I2C:=HI_GPIO_I2C
else
HI_GPIO_I2C:=HI_GPIO_XXX
endif

EXTRA_CFLAGS += -D$(HI_FPGA) -D$(HI_GPIO_I2C) -D$(HIDBG)
EXTRA_CFLAGS += -D__$(OSTYPE)_

INIT_FILE := ../init/$(OSTYPE)/isp_init.c
ISP_SRC := isp.c isp_st.c mkp_acm.c isp_acm_lut.c  ../vreg/hi_drv_vreg.c  ../vreg/hi_vreg.c 
ISP_SRC_O := $(ISP_SRC)
ISP_SRC += $(INIT_FILE)

$(HIARCH)_isp-objs = $(ISP_SRC:%.c=%.o)
hi_isp-objs = $(ISP_SRC_O:%.c=%.o)

ifneq ($(KERNELRELEASE),)
	obj-m += $(HIARCH)_isp.o
	obj-m += hi_isp.o
endif

.PHONY: default clean
default:
	@$(MAKE) -C $(KERNEL_ROOT) M=$(PWD) modules 
	@mkdir -p $(ISP_KO) && cp -rf $(HIARCH)_isp.ko $(ISP_KO)
	@mkdir -p $(REL_KO) && cp -rf $(HIARCH)_isp.ko $(REL_KO)
	@mkdir -p $(ISP_OBJ) && cp -rf hi_isp.o $(ISP_OBJ)
	@mkdir -p $(REL_OBJ) && cp -rf hi_isp.o $(REL_OBJ)
	@mkdir -p $(REL_INI) && cp -rf $(INIT_FILE) $(REL_INI)
clean: 
	@$(MAKE) -C $(KERNEL_ROOT) M=$(PWD) clean
	@if [ -e $(ISP_KO) ];then rm -rf "$(ISP_KO)"; fi
	@if [ -e $(ISP_OBJ) ];then rm -rf "$(ISP_OBJ)"; fi
	@rm -f $(REL_INI)/$(shell basename $(INIT_FILE))
	@for x in `find ../init/$(OSTYPE) -name "*.o.cmd"`;do rm -rf $$x;done
	@for x in `find ../init/$(OSTYPE) -name "*.o*"`;do rm -rf $$x;done
	@for x in `find ../vreg/ -name "*.o.cmd"`;do rm -rf $$x;done
	@for x in `find ../vreg/ -name "*.o*"`;do rm -rf $$x;done
